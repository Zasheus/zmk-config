/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUM_SYM 1
#define NAV     2
#define FUNC    3
#define SYMB	4

/ {
	behaviors {
		rst: boot_reset 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Bootloader Tap - Reset Hold";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "balanced";
			bindings = <&reset>, <&bootloader>;
        };

        bh: layer_taps 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Layer-Tap";
			#binding-cells = <2>;
			tapping_term_ms = <215>;
            flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods0 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <170>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };
        
        hm1: homerow_mods1 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <205>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        hm2: homerow_mods2 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods 2";
			#binding-cells = <2>;
			tapping_term_ms = <250>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        com_col: comma_semicolon
		{
		 	compatible = "zmk,behavior-hold-tap";
	     	label = "Tap comma_hold colon";
			#binding-cells = <2>;
			tapping_term_ms = <150>;
            flavor = "balanced";
		 	bindings = <&kp>, <&kp>;
	    };
   	 };
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_backspce {
			timeout-ms = <50>;
			key-positions = <8 9>;
			bindings = <&kp BSPC>;
		};
		combo_gesc 
		{
			timeout-ms = <30>;
			key-positions = <0 1>;
			bindings = <&com_col GRAVE ESC>;
		};
		combo_tab 
		{
			timeout-ms = <35>;
			key-positions = <11 12>;
			bindings = <&kp TAB>;
		};
		combo_mnxt 
		{
			timeout-ms = <30>;
			key-positions = <28 29>;
			bindings = <&kp C_NEXT>;
		};
		combo_mprev 
		{
			timeout-ms = <30>;
			key-positions = <27 28>;
			bindings = <&kp C_PREV>;	
		};
		combo_mpp 
		{
			timeout-ms = <30>;
			key-positions = <27 29>;
			bindings = <&kp C_PP>;
		};
		combo_del 
		{
			timeout-ms = <40>;
			key-positions = <7 8 9>;
			bindings = <&kp DEL>;
		};
	};
};

/ {
    keymap 
	{
    compatible = "zmk,keymap";

    default_layer {
            bindings = <
    &kp Q,        &kp W,        &kp E,        &kp R,        &kp T,        	&kp Y,        &kp U,        &kp I,        &kp O,        &kp P,
	&hm LGUI A,   &hm LALT S,   &hm LCTRL D,  &hm LSHFT F,  &kp G,        	&kp H,        &hm LSHFT J,  &hm LCTRL K,  &hm RALT L,   &hm LGUI SQT,
	&kp Z,        &kp  X,   	&kp C,        &kp V,        &kp B,        	&kp N,        &kp M,        &kp COMMA,    &kp DOT,	  &kp SLASH,
											  &lt 3 TAB, 	  	&lt 2 SPC, 		&lt 1 BSPC,   &lt 4 RET
            >;
        };

    num_sym {
            bindings = <
    &kp CRRT,    &kp N7,   &kp N8,   &kp N9,   &kp PLUS,    		&kp EXCL,        &kp LBRC,        &kp RBRC,        &kp CRRT,        &kp ASTRK,
	&kp ASTRK,    &kp N4,   &kp N5,   &kp N6,   &kp MINUS,     		&kp AMPS,        &kp LPAR,   &kp RPAR,   &kp COLON,   &kp SEMICOLON,
	&kp SLASH,   &kp N1,   &kp N2,   &kp N3,   &kp EQL,   			&kp PIPE, 		&kp LBKT,        &kp RBKT,        &kp SLASH,        &kp PLUS,
									&kp DOT,   &kp NUM_0,   	&kp MINUS,   &kp UNDER
            >;
        };

    nav {
            bindings = <
    U_NA, U_NA,    U_NA,        U_NA,        U_NA,        U_RDO,       U_CPY,       &kp UP,       U_PST,       U_UND,
	&kp LGUI,    &kp LALT,    &kp LCTRL,   &kp LSHFT,   U_NA,        &kp CAPS,    &kp LEFT,    &kp DOWN,    &kp RIGHT,      U_CUT,
	U_NA,        &kp RALT,    U_NA,        U_NA,        U_NA,        &kp INS,     &kp HOME,    &kp PG_DN,   &kp PG_UP,   &kp END,
	U_NP,        U_NP,        U_NA,        U_NA,        U_NA,        &kp BSPC,     &kp RET,    &kp DEL,     U_NP,        U_NP
            >;
        };

	func {
            bindings = <
    &kp F12,     &kp F7,      &kp F8,      &kp F9,      &kp PSCRN,   U_NA,        U_NA,        U_NA,        U_NA,    &bootloader,
	&kp F11,     &kp F4,      &kp F5,      &kp F6,      &kp SLCK,    U_NA,        &kp LSHFT,   &kp LCTRL,   &kp LALT,    &kp LGUI,
	&kp F10,     &kp F1,      &kp F2,      &kp F3,      &kp PAUSE_BREAK, U_NA,        U_NA,        U_NA,        &kp RALT,    U_NA,
	U_NP,        U_NP,        &kp K_APP,   &kp TAB,     &kp SPC,     U_NA,        U_NA,        U_NA,        U_NP,        U_NP
            >;
        };

	symb {
            bindings = <
    &kp LBRC,    &kp AMPS,    &kp ASTRK,   &kp LPAR,    &kp RBRC,    U_NA,        U_NA,        U_NA,        U_NA,    U_NA,
	&kp TILDE,   &kp DLLR,    &kp PRCT,    &kp CRRT,    &kp BSLH,    U_NA,        &kp LSHFT,   &kp LCTRL,   &kp LALT,    &kp LGUI,
	&kp GRAVE,   &kp EXCL,    &kp AT,      &kp HASH,    &kp PIPE,    U_NA,        U_NA,        U_NA,        &kp RALT,    U_NA,
	&kp UNDER,    &kp RPAR,   U_NA,        U_NA
            >;
        };
    };
};
